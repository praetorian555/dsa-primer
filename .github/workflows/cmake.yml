name: Build checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release, RelWithDebInfo, Debug

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "MSVC Debug"
          os: windows-latest
          build_type: "Debug"
          cxx: "cl"
          generators: "Visual Studio 17 2022"
        - name: "MSVC Test"
          os: windows-latest
          build_type: "RelWithDebInfo"
          cxx: "cl"
          generators: "Visual Studio 17 2022"
        - name: "MSVC Release"
          os: windows-latest
          build_type: "Release"
          cxx: "cl"
          generators: "Visual Studio 17 2022"
        - name: "Windows Clang Debug"
          os: windows-latest
          build_type: "Debug"
          cxx: "clang-cl"
          generators: "Ninja"
        - name: "Windows Clang Test"
          os: windows-latest
          build_type: "RelWithDebInfo"
          cxx: "clang-cl"
          generators: "Ninja"
        - name: "Windows Clang Release"
          os: windows-latest
          build_type: "Release"
          cxx: "clang-cl"
          generators: "Ninja"
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    steps:
    - uses: actions/checkout@v3
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -G "${{matrix.config.generators}}" -DOPAL_BUILD_TESTS=ON -DOPAL_HARDENING=OFF

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.config.build_type}}
      
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: ctest -C ${{matrix.config.build_type}} --output-on-failure --verbose
